{% extends parent_template %}

{% block sidebar %}
    {% include 'operator.' ~ template ~ '.settings_sidebar' %}
{% endblock %}

{% block title %}
    {% if record|default is not empty and record.exists %}
        {{ Lang.get('general.edit_item', {'item': Lang.choice('ticket.holiday', 1)}) }}
    {% else %}
        {{ Lang.get('general.add_item', {'item': Lang.choice('ticket.holiday', 1)}) }}
    {% endif %}
{% endblock %}

{% block content %}

    {% if record|default is not empty and record.exists %}
        {{ form_model(record, {'route': [ 'ticket.operator.holiday.update', record.id ], 'method': 'PUT', 'class': 'validate'}) }}
    {% else %}
        {{ form_open({'route': 'ticket.operator.holiday.store', 'class': 'validate'}) }}
    {% endif %}

        <div class="sp-form-container">

            <div class="sp-form-row">
                {{ form_label('name', Lang.get('general.name')) }}
                <div class="sp-input-container sp-input-translatable sp-input-translatable-small">
                    {{ form_translatable_text(record, 'name', null, {'autofocus': 'autofocus'}) }}
                </div>
            </div>

            <div class="sp-form-row">
                <label></label>
                <div class="sp-input-container">
                    <label>
                        {{ form_radio('type', 0, record|default is empty or not record.exists ? true : record.number_of_days == 1) }}
                        {{ Lang.get('ticket.holiday_single_day') }}
                    </label>
                    &nbsp;
                    <label>
                        {{ form_radio('type', 1, record|default is not empty and record.exists and record.number_of_days > 1) }}
                        {{ Lang.get('ticket.holiday_date_range') }}
                    </label>
                </div>
            </div>

            <div class="sp-single-day {% if record|default is not empty and record.exists and record.number_of_days > 1 %}sp-hidden{% endif %}">
                <div class="sp-form-row">
                    {{ form_label('month', Lang.choice('general.month', 1)) }}
                    <div class="sp-input-container">
                        {{ form_selectMonth('month') }}
                    </div>
                </div>

                <div class="sp-form-row">
                    {{ form_label('year', Lang.choice('general.year', 1)) }}
                    <div class="sp-input-container">
                        {{ form_select('year', {'': ''} + years) }}
                        <div class="sp-description">{{ Lang.get('ticket.holiday_month_year_desc') }}</div>
                    </div>
                </div>

                <div class="sp-form-row">
                    {{ form_label('day', Lang.choice('general.day', 1)) }}
                    <div class="sp-input-container">
                        <div>{{ form_select('day') }}</div>
                        <div class="sp-mt-3">{{ Lang.get('ticket.holiday_or_on_the') }}</div>
                        <div class="sp-mt-3">
                            {{ form_select('order',
                                {
                                    '': '',
                                    '1': Lang.get('general.first'),
                                    '2': Lang.get('general.second'),
                                    '3': Lang.get('general.third'),
                                    '4': Lang.get('general.forth'),
                                    '5': Lang.get('general.last')
                                })
                            }}
                        </div>
                        <div class="sp-mt-3">{{ form_select('weekday', {'': ''} + weekdays()) }}</div>
                    </div>
                </div>
            </div>

            <div class="sp-date-range {% if record|default is empty or not record.exists or record.number_of_days == 1 %}sp-hidden{% endif %}">
                <div class="sp-form-row">
                    {{ form_label('start_date', Lang.get('general.start_date')) }}
                    <div class="sp-input-container">
                        {{ form_text('start_date', record.start_date|date(Config.get('settings.date_format')),
                            {'class': 'datepicker sp-w-40', 'placeholder': '&#xf073;'}) }}
                    </div>
                </div>

                <div class="sp-form-row">
                    {{ form_label('end_date', Lang.get('general.end_date')) }}
                    <div class="sp-input-container">
                        {{ form_text('end_date', record.end_date|date(Config.get('settings.date_format')),
                                {'class': 'datepicker sp-w-40', 'placeholder': '&#xf073;'}) }}
                    </div>
                </div>
            </div>

        </div>

        <div class="sp-form-button">
            {{ form_submit(Lang.choice('general.submit', 1)) }}
        </div>

    {{ form_close() }}

{% endblock %}

{% block scripts_footer %}
    {% if jsValidator|default is not empty %}
        {{ jsValidator|raw }}
    {% endif %}

    <!-- Translatable.js dependencies: Selectize -->
    <script type="text/javascript" src="{{ asset_rev('resources/assets/operator/js/translatable.js') }}"></script>

    <script type="text/javascript">
        function fillDays(start) {
            var currentDay = typeof start !== 'undefined' ? start : $('select[name="day"]').val();

            var year = $('select[name="year"]').val();
            var month = $('select[name="month"]').val() - 1;
            var days;

            if (!year && month == 2) {
                days = 29;
            } else {
                // http://snippets.dzone.com/posts/show/2099
                if (year) {
                    days = 32 - new Date(year, month, 32).getDate();
                } else {
                    year = new Date().getFullYear(); // if year not given then default to current year
                    days = 32 - new Date(year, month, 32).getDate();
                }
            }

            $('select[name="day"]').empty();
            for (i = 1; i <= days; i++) {
                $('select[name="day"]').append('<option value="' + i + '">' + i + '</option>');
            }

            if (currentDay) {
                $('select[name="day"]').val(currentDay);
            }
        }

        $(function() {
            // Date picker
            $('.datepicker').datepicker();

            {% if record|default is not empty and record.exists and record.day|default is not empty %}
                fillDays({{ record.day }});
            {% else %}
                fillDays();
            {% endif %}
            $('select[name="month"], select[name="year"]').on('change', function() {
                fillDays();
            });

            $('input[name="type"]').on('click', function () {
                if ($(this).val() == 0) {
                    $('.sp-single-day').removeClass('sp-hidden').find(':input').prop('disabled', false);
                    $('.sp-date-range').addClass('sp-hidden').find(':input').prop('disabled', true);
                } else {
                    $('.sp-single-day').addClass('sp-hidden').find(':input').prop('disabled', true);
                    $('.sp-date-range').removeClass('sp-hidden').find(':input').prop('disabled', false);
                }
            });
        });
    </script>
{% endblock %}
